<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:cal="http://www.caliburnproject.org">
    
    <!-- ButtonTunesButton -->
    <Style x:Key="ButtonTunesButton" TargetType="ToggleButton">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Image x:Name="Image"
                               Source="{Binding Tag[0], RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Image" Property="Source"
                                    Value="{Binding Tag[1], RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- BorderedButton -->
    <Style x:Key="BorderedButton" TargetType="ToggleButton">
        <Style.Resources>
            <SolidColorBrush x:Key="Color"/>
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource Color}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Color}"/>
        <Setter Property="Foreground" Value="{DynamicResource Color}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontFamily" Value="{StaticResource Black}"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <!-- DifficultyButton : BorderedButton -->
    <Style x:Key="DifficultyButton" TargetType="ToggleButton"
           BasedOn="{StaticResource BorderedButton}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Border"
                                    Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Foreground" Value="#242526"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- CollaborationButton : BorderedButton -->
    <Style x:Key="CollaborationButton" TargetType="ToggleButton"
           BasedOn="{StaticResource BorderedButton}">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="8,0"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                                Background="Transparent"
                                BorderBrush="{StaticResource Unchecked}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                TextBlock.Foreground="{StaticResource Unchecked}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Border"
                                    Value="#57000000"/>
                            <Setter Property="BorderBrush" TargetName="Border"
                                    Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="TextBlock.Foreground" TargetName="Border"
                                    Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- CategoryButton -->
    <Style x:Key="CategoryButton" TargetType="ToggleButton">
        <Style.Resources>
            <LinearGradientBrush x:Key="Background"/>
            <SolidColorBrush x:Key="Foreground"/>
        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource Foreground}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontFamily" Value="{StaticResource Category}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            Background="#56000000">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Margin="0,2,0,0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="Border"
                                    Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- LevelButton -->
    <Style x:Key="LevelButton" TargetType="Button">
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- LevelIndicator -->
    <Style x:Key="LevelIndicator" TargetType="Image">
        <Setter Property="Width" Value="18"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Source" Value="pack://application:,,,/Images/d_blk.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- LevelIndicatorVariations : LevelIndicator -->
    <Style x:Key="LevelIndicatorYellow" TargetType="Image"
           BasedOn="{StaticResource LevelIndicator}">
        <Setter Property="Source" Value="pack://application:,,,/Images/d_ylw.png"/>
    </Style>
    <Style x:Key="LevelIndicatorOrange" TargetType="Image"
           BasedOn="{StaticResource LevelIndicator}">
        <Setter Property="Source" Value="pack://application:,,,/Images/d_org.png"/>
    </Style>
    <Style x:Key="LevelIndicatorRed" TargetType="Image"
           BasedOn="{StaticResource LevelIndicator}">
        <Setter Property="Source" Value="pack://application:,,,/Images/d_red.png"/>
    </Style>
</ResourceDictionary>